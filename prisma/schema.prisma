// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String       @id @default(cuid())
  name       String       @unique
  userId     String?
  billboard  Billboard[]  @relation("StoreToBillboard")
  categories Categories[] @relation("StoreToCategories")
  sizes      Size[]       @relation("StoreToSize")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Billboard {
  id         String       @id @default(cuid())
  storeId    String
  store      Store        @relation("StoreToBillboard", fields: [storeId], references: [id])
  label      String
  imageUrl   String
  categories Categories[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@index([storeId])
}

model Categories {
  id          String    @id @default(cuid())
  storeId     String
  store       Store     @relation("StoreToCategories", fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id      String @id @default(cuid())
  storeId String
  store   Store  @relation("StoreToSize", fields: [storeId], references: [id])
  name    String
  value   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}